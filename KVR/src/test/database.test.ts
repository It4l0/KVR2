import { connectDB, AppDataSource } from '../config/database';
import { User } from '../models/User';
import dotenv from 'dotenv';

dotenv.config();

async function testDatabaseConnection() {
  console.log('Vari√°veis de ambiente:');
  console.log(`DB_HOST: ${process.env.DB_HOST}`);
  console.log(`DB_PORT: ${process.env.DB_PORT}`);
  console.log(`DB_USER: ${process.env.DB_USER}`);
  console.log(`DB_NAME: ${process.env.DB_NAME}`);

  try {
    console.log('\nIniciando teste de conex√£o com o banco de dados...');
    
    // Conectar ao banco de dados
    console.log('Conectando ao PostgreSQL...');
    await connectDB();
    console.log('Conex√£o estabelecida com sucesso!');
    
    // Testar opera√ß√£o b√°sica
    console.log('\nTestando opera√ß√µes no banco de dados...');
    const userRepository = AppDataSource.getRepository(User);
    
    // Criar um usu√°rio teste
    console.log('Criando usu√°rio teste...');
    const testUser = userRepository.create({
      nome_completo: 'Usu√°rio Teste',
      email: 'teste@example.com',
      senha: 'senha123'
    });
    
    await userRepository.save(testUser);
    console.log('‚úÖ Usu√°rio teste criado com sucesso:', testUser);
    
    // Limpar o usu√°rio teste
    console.log('\nRemovendo usu√°rio teste...');
    await userRepository.delete(testUser.id);
    console.log('‚úÖ Usu√°rio teste removido com sucesso');
    
    console.log('\nüéâ Teste de conex√£o conclu√≠do com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro no teste de conex√£o:');
    console.error(error);
  } finally {
    // Encerrar a conex√£o
    console.log('\nEncerrando conex√£o...');
    await AppDataSource.destroy();
    console.log('Conex√£o encerrada.');
    process.exit(0);
  }
}

testDatabaseConnection();
